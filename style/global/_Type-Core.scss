@import "Colors-Core";

$font-family--primary: "PPEditorialNew";
$font-family--secondary: "Epilogue";

$font-subtypes: ("accent", "big");

//TODO: add some code to reverse maps so that when writing it here it can be written more logically as (small number, big number)

// prettier-ignore
$text-styles: (
  "h1": (
    "font-family": $font-family--primary,
    "font-weight": 400,
    "font-size": (
      75.0,
      100,
    ),
    "line-height": 115%,
  ),
  "h2": (
    "font-family": $font-family--primary,
    "font-weight": 400,
    "font-size": (
      57.3,
      75,
    ),
  ),
  "h3": (
    "font-family": $font-family--secondary,
    "font-weight": 600,
    "font-size": (
      43.8,
      56,
    ),
    "line-height": 116.071%,
  ),
  "h4": (
    "font-family": $font-family--secondary,
    "font-weight": 600,
    "font-size": (
      33.9,
      42,
    ),
    "line-height": 114.286%,
  ),
  "h5": (
    "font-family": $font-family--secondary,
    "font-weight": 400,
    "font-size": (
      26.8,
      32,
    ),
    "line-height": 120%,
  ),
  "h6": (
    "font-family": $font-family--secondary,
    "font-weight": 400,
    "font-size": (
      21.1,
      // 24,
      22,
    ),
    "line-height": 133.333%,
  ),
  "body": (
    "font-family": $font-family--secondary,
    "font-weight": 400,
    "font-size": (
      16.8,
      17,
      // 18,
    ),
    "line-height": 138.5%,
  ),
  "small": (
    "font-family": $font-family--secondary,
    "font-weight": 700,
    "font-size": (
      14,
      14,
    ),
    "line-height": 128.571%,
    "text-transform": uppercase,
  ),
);



@mixin text-default {
  text-transform: none !important;
  letter-spacing: normal !important;
}

@mixin apply-properties($properties) {
  @each $property-name, $property-value in $properties {
    @if type-of($property-value) == "list" {
      // no nothing if its a map because its probably fluid-type
      // @each $value in $property-value {
      //   #{$property-name}: $value !important;
      // }
    } @else {
      #{$property-name}: $property-value !important;
    }
  }
}

@mixin text-style($key, $value) {
  font-size: var(--font-size--#{$key}) !important;
  line-height: var(--line-height--#{$key}, 120%) !important;
  @include text-default;

  $styles: map-remove-multiple($value, $font-subtypes);
  $subtypes: map-get-multiple($value, $font-subtypes);

  @if $styles {
    @include apply-properties($styles);
  }

  // @warn $subtypes;
  @if $subtypes {
    @each $subtype, $properties in $subtypes {
      &__#{$subtype} {
        font-size: var(--font-size--#{$key}__#{$subtype}) !important;
        line-height: var(--font-size--#{$key}__#{$subtype}, normal) !important;

        @include apply-properties($properties);
      }
    }
  }
}

@mixin mixin-text-style($key, $font-subtype: false) {
  $styles: map-get($text-styles, $key);

  // @each $subtype in $font-subtypes {
  //   @if map-has-key($styles, $subtype) {
  //     $font-subtype: $subtype;
  //   }
  // }
  // @warn $key;

  @if $font-subtype {
    $styles: map-get(map-get($text-styles, $key), $font-subtype);
    font-size: var(--font-size--#{$key}__#{$font-subtype}, var(--font-size--#{$key})) !important;
    line-height: var(
      --line-height--#{$key}__#{$font-subtype} var(--line-height--#{$key}),
      normal
    ) !important;
  } @else {
    $styles: map-remove(map-get($text-styles, $key), $font-subtype);
    font-size: var(--font-size--#{$key}) !important;
    line-height: var(--line-height--#{$key}, normal) !important;
  }

  @include text-default;
  @each $property-name, $property-value in $styles {
    @if type-of($property-value) != "map" and type-of($property-value) != "list" {
      #{$property-name}: $property-value !important;
    }
  }
}

%text {
  @each $key, $value in $text-styles {
    &--#{$key} {
      @include text-style($key, $value);
    }
  }
}

@mixin text--h1 {
  @include mixin-text-style("h1");
}
// @mixin text--h1__accent {
// @include mixin-text-style("h1", "accent");
// }
@mixin text--h2 {
  @include mixin-text-style("h2");
}
// @mixin text--h2__accent {
// @include mixin-text-style("h2", "accent");
// }
@mixin text--h3 {
  @include mixin-text-style("h3");
}
// @mixin text--h3__accent {
// @include mixin-text-style("h3", "accent");
// }
@mixin text--h4 {
  @include mixin-text-style("h4");
}
// @mixin text--h4__accent {
// @include mixin-text-style("h4", "accent");
// }
@mixin text--h5 {
  @include mixin-text-style("h5");
}
// @mixin text--h5__accent {
// @include mixin-text-style("h5", "accent");
// }
@mixin text--h6 {
  @include mixin-text-style("h6");
}
@mixin text--body {
  @include mixin-text-style("body");
}
@mixin text--small {
  @include mixin-text-style("small");
}

// @mixin text--body__big {
//   @include mixin-text-style("body", "big");
// }
